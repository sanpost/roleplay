// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement()) // Unikalny identyfikator
  google_id String   @unique                      // Unikalny identyfikator Google
  username  String                         // Unikalna nazwa użytkownika
  email     String   @unique                      // Unikalny adres e-mail
  created_at DateTime @default(now())             // Data utworzenia
  profile   Profile?  @relation                   // Relacja z profilem
}

// Model dla profili
model Profile {
  id             Int      @id @default(autoincrement()) // Unikalny identyfikator profilu
  user_id        Int      @unique                     // Unikalny identyfikator użytkownika
  bio            String?  // Opcjonalny opis
  age            Int?     // Opcjonalny wiek
  preferences    String?  // Opcjonalne preferencje
  age_range      String?  // Opcjonalny zakres wiekowy
  relationship   String?  // Opcjonalny status związku
  gender         String?  // Opcjonalna płeć
  contact_methods String?      // Opcjonalne formy kontaktu

  user User @relation(fields: [user_id], references: [id]) // Relacja z użytkownikiem
}

model Preference {
  id        Int      @id @default(autoincrement())
  name      String   @unique // Unikalna nazwa preferencji
}

// Przykładowy model do przechowywania relacji
model Relationship {
  id        Int      @id @default(autoincrement())
  name      String   @unique // Unikalna nazwa relacji
}

model Gender {
  id        Int      @id @default(autoincrement())
  name      String   @unique // Unikalna nazwa relacji
}

model AgeRange {
  id        Int      @id @default(autoincrement())
  name      String   @unique // Unikalna nazwa relacji
}

model ContactMethod {
  id    Int    @id @default(autoincrement())
  name  String @unique // Unikalna nazwa metody kontaktu
}